"""empty message

Revision ID: 24f943b464ae
Revises: 1674ba61ae00
Create Date: 2019-04-02 19:25:49.000183

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '24f943b464ae'
down_revision = '1674ba61ae00'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('bank_account', sa.Column('kyc_application_id', sa.Integer(), nullable=True))
    op.add_column('bank_account', sa.Column('wyre_id', sa.String(), nullable=True))
    op.drop_constraint('bank_account_business_verification_id_fkey', 'bank_account', type_='foreignkey')
    op.create_foreign_key(None, 'bank_account', 'kyc_application', ['kyc_application_id'], ['id'])
    op.drop_column('bank_account', 'business_verification_id')
    op.drop_column('blockchain_transaction', 'has_output_txn')
    op.drop_column('blockchain_transaction', 'is_bitcoin')
    op.drop_column('credit_transfer', 'uuid')
    op.add_column('kyc_application', sa.Column('type', sa.String(), nullable=True))
    op.drop_constraint('transfer_card_user_id_fkey', 'transfer_card', type_='foreignkey')
    op.drop_column('transfer_card', '_amount_loaded')
    op.drop_column('transfer_card', 'user_id')
    op.drop_column('transfer_card', 'amount_loaded_signature')
    op.add_column('uploaded_document', sa.Column('kyc_application_id', sa.Integer(), nullable=True))
    op.drop_constraint('uploaded_document_business_verification_id_fkey', 'uploaded_document', type_='foreignkey')
    op.create_foreign_key(None, 'uploaded_document', 'kyc_application', ['kyc_application_id'], ['id'])
    op.drop_column('uploaded_document', 'business_verification_id')
    op.add_column('user', sa.Column('public_serial_number', sa.String(), nullable=True))
    op.drop_column('user', '_public_serial_number')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('_public_serial_number', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('user', 'public_serial_number')
    op.add_column('uploaded_document', sa.Column('business_verification_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'uploaded_document', type_='foreignkey')
    op.create_foreign_key('uploaded_document_business_verification_id_fkey', 'uploaded_document', 'kyc_application', ['business_verification_id'], ['id'])
    op.drop_column('uploaded_document', 'kyc_application_id')
    op.add_column('transfer_card', sa.Column('amount_loaded_signature', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('transfer_card', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('transfer_card', sa.Column('_amount_loaded', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('transfer_card_user_id_fkey', 'transfer_card', 'user', ['user_id'], ['id'])
    op.drop_column('kyc_application', 'type')
    op.add_column('credit_transfer', sa.Column('uuid', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('blockchain_transaction', sa.Column('is_bitcoin', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('blockchain_transaction', sa.Column('has_output_txn', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('bank_account', sa.Column('business_verification_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'bank_account', type_='foreignkey')
    op.create_foreign_key('bank_account_business_verification_id_fkey', 'bank_account', 'kyc_application', ['business_verification_id'], ['id'])
    op.drop_column('bank_account', 'wyre_id')
    op.drop_column('bank_account', 'kyc_application_id')
    # ### end Alembic commands ###
