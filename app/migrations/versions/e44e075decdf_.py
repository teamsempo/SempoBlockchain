"""empty message

Revision ID: e44e075decdf
Revises: ac8716ecdc21
Create Date: 2019-11-10 11:19:04.938731

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e44e075decdf'
down_revision = 'ac8716ecdc21'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exchange',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('authorising_user_id', sa.Integer(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.Column('blockchain_task_id', sa.Integer(), nullable=True),
    sa.Column('to_desired_amount', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('from_token_id', sa.Integer(), nullable=True),
    sa.Column('to_token_id', sa.Integer(), nullable=True),
    sa.Column('from_transfer_id', sa.Integer(), nullable=True),
    sa.Column('to_transfer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['from_token_id'], ['token.id'], ),
    sa.ForeignKeyConstraint(['from_transfer_id'], ['credit_transfer.id'], ),
    sa.ForeignKeyConstraint(['to_token_id'], ['token.id'], ),
    sa.ForeignKeyConstraint(['to_transfer_id'], ['credit_transfer.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exchange_contract',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('authorising_user_id', sa.Integer(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.Column('blockchain_address', sa.String(), nullable=True),
    sa.Column('contract_registry_blockchain_address', sa.String(), nullable=True),
    sa.Column('subexchange_address_mapping', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('reserve_token_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['reserve_token_id'], ['token.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exchange_contract_blockchain_address'), 'exchange_contract', ['blockchain_address'], unique=False)
    op.create_index(op.f('ix_exchange_contract_contract_registry_blockchain_address'), 'exchange_contract', ['contract_registry_blockchain_address'], unique=False)
    op.create_table('exchange_contract_token_association_table',
    sa.Column('exchange_contract_id', sa.Integer(), nullable=True),
    sa.Column('token_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['exchange_contract_id'], ['exchange_contract.id'], ),
    sa.ForeignKeyConstraint(['token_id'], ['token.id'], )
    )
    op.add_column('blockchain_address', sa.Column('is_public', sa.Boolean(), nullable=True))
    op.add_column('credit_transfer', sa.Column('_transfer_amount_wei', sa.Numeric(precision=27), nullable=True))
    op.add_column('credit_transfer', sa.Column('is_public', sa.Boolean(), nullable=True))
    op.drop_column('credit_transfer', 'transfer_amount')
    op.add_column('email_whitelist', sa.Column('is_public', sa.Boolean(), nullable=True))
    op.add_column('transfer_account', sa.Column('_balance_wei', sa.Numeric(precision=27), nullable=True))
    op.add_column('transfer_account', sa.Column('exchange_contract_id', sa.Integer(), nullable=True))
    op.add_column('transfer_account', sa.Column('is_public', sa.Boolean(), nullable=True))
    op.create_foreign_key(None, 'transfer_account', 'exchange_contract', ['exchange_contract_id'], ['id'])
    op.drop_column('transfer_account', 'balance')
    op.add_column('user', sa.Column('is_public', sa.Boolean(), nullable=True))
    op.add_column('user', sa.Column('primary_blockchain_address', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user', 'primary_blockchain_address')
    op.drop_column('user', 'is_public')
    op.add_column('transfer_account', sa.Column('balance', sa.BIGINT(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'transfer_account', type_='foreignkey')
    op.drop_column('transfer_account', 'is_public')
    op.drop_column('transfer_account', 'exchange_contract_id')
    op.drop_column('transfer_account', '_balance_wei')
    op.drop_column('email_whitelist', 'is_public')
    op.add_column('credit_transfer', sa.Column('transfer_amount', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_column('credit_transfer', 'is_public')
    op.drop_column('credit_transfer', '_transfer_amount_wei')
    op.drop_column('blockchain_address', 'is_public')
    op.drop_table('exchange_contract_token_association_table')
    op.drop_index(op.f('ix_exchange_contract_contract_registry_blockchain_address'), table_name='exchange_contract')
    op.drop_index(op.f('ix_exchange_contract_blockchain_address'), table_name='exchange_contract')
    op.drop_table('exchange_contract')
    op.drop_table('exchange')
    # ### end Alembic commands ###
