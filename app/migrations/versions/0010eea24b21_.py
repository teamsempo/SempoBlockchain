"""Bind unbound disbursements to organisation

Revision ID: 0010eea24b21
Revises: d2591d44b5c4
Create Date: 2021-06-22 16:19:40.297594

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import Session


# revision identifiers, used by Alembic.
revision = '0010eea24b21'
down_revision = 'd2591d44b5c4'
branch_labels = None
depends_on = None

Base = declarative_base()

class Disbursement(Base):
    __tablename__ = 'disbursement'
    id = sa.Column(sa.Integer, primary_key=True)
    organisation_id = sa.Column(sa.Integer)

class AssociationTable(Base):
    __tablename__ = 'disbursement_transfer_account_association_table'
    disbursement_id = sa.Column(sa.Integer, primary_key=True)
    transfer_account_id = sa.Column(sa.Integer)

class TransferAccount(Base):
    __tablename__ = 'transfer_account'
    id = sa.Column(sa.Integer, primary_key=True)
    organisation_id = sa.Column(sa.Integer)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    session = Session(bind=conn)
    # Infer the organisation from the org included in past disbursements
    for d in session.query(Disbursement).execution_options(show_all=True).all():
        if not d.organisation_id:
            at = session.query(AssociationTable).execution_options(show_all=True).filter(AssociationTable.disbursement_id == d.id).first()
            ta = session.query(TransferAccount).execution_options(show_all=True).filter(at.transfer_account_id == TransferAccount.id).first()
            d.organisation_id = ta.organisation_id
    session.commit()
    # ### end Alembic commands ###


def downgrade():
    return True

